{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice\\\\spotify\\\\spotify\\\\shazam-client-main\\\\Yazdani-\\\\MusicApp\\\\src\\\\navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink } from \"./navElements\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./mynav.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTheater } from \"../redux/slices/movieSlice\";\nimport { setSignin, setSignout } from \"../redux/slices/authSlice\";\nimport UserProfile from \"../pages/Userprofile\";\nimport { URL } from \"../../src/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const signstatus = useSelector(state => state.authSlice.status);\n  const [theaterCity, setTheaterCity] = useState([]);\n  const [profile, setProfile] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const role = useSelector(state => state.authSlice.user_role);\n\n  const loadtheaterCity = async () => {\n    const result = await axios.get(`${URL}/all/getalltheaterslocation`);\n    setTheaterCity(result.data);\n  };\n\n  function selectAction(theater_id) {\n    // window.alert(\"select worked\" + theater_id);\n    dispatch(setTheater(theater_id));\n  }\n\n  const logOut = () => {\n    // alert(\"loggin out\");\n    dispatch(setSignout());\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    loadtheaterCity();\n    console.log(\"Theater City loaded successfully\");\n  }, []);\n  useEffect(() => {}, [signstatus]); // const navigate = useNavigate();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [profile && /*#__PURE__*/_jsxDEV(UserProfile, {\n      setOpenModel: setProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"mylogo\",\n          src: require(\"./logo.png\"),\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bars, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/home1\",\n          activeStyle: true,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link active\",\n            \"aria-current\": \"page\",\n            to: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), \"HOME\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/movies\",\n          activeStyle: true,\n          children: \"MOVIES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/getalloffers\",\n          activeStyle: true,\n          children: \"OFFERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"theaterBar\",\n          name: \"Theaters\",\n          id: \"Theaters\",\n          defaultValue: \"Select Theater\",\n          onChange: e => selectAction(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            selected: true,\n            disabled: true,\n            hidden: true,\n            children: \"Choose A Theater\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), theaterCity.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.theaterId,\n            children: [item.theater_name, \",\", item.taluka]\n          }, item.theaterId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), !signstatus && /*#__PURE__*/_jsxDEV(NavBtn, {\n        children: /*#__PURE__*/_jsxDEV(NavBtnLink, {\n          to: \"/signin\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), signstatus && /*#__PURE__*/_jsxDEV(NavBtn, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: \"PROFILE\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => {\n              setProfile(true);\n              {\n                role == \"ADMIN\" ? navigate(\"/adminhome\") : role == \"USER\" ? navigate(\"/userprofile\") : navigate(\"/managerhome\");\n              }\n            },\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), role == \"ADMIN\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => {\n              navigate(\"/adminhome\");\n            },\n            children: \"ADMIN PANEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this) : role == \"USER\" ? null : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => {\n              navigate(\"/managerhome\");\n            },\n            children: \"MANAGER PANEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), role == \"USER\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => {\n              navigate(\"/seemybokings\");\n            },\n            children: \"See Bookings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: logOut,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Navbar, \"dqX+4r72x2apiXYWs4VbsuAc54k=\", false, function () {\n  return [useSelector, useNavigate, useDispatch, useSelector];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/practice/spotify/spotify/shazam-client-main/Yazdani-/MusicApp/src/navbar.js"],"names":["React","useState","useEffect","Dropdown","DropdownButton","Nav","NavLink","Bars","NavMenu","NavBtn","NavBtnLink","useNavigate","Link","axios","useDispatch","useSelector","setTheater","setSignin","setSignout","UserProfile","URL","Navbar","signstatus","state","authSlice","status","theaterCity","setTheaterCity","profile","setProfile","navigate","dispatch","role","user_role","loadtheaterCity","result","get","data","selectAction","theater_id","logOut","console","log","require","e","target","value","map","item","theaterId","theater_name","taluka"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport { Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink } from \"./navElements\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./mynav.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTheater } from \"../redux/slices/movieSlice\";\r\nimport { setSignin, setSignout } from \"../redux/slices/authSlice\";\r\nimport UserProfile from \"../pages/Userprofile\";\r\nimport { URL } from \"../../src/config\";\r\nconst Navbar = () => {\r\n  const signstatus = useSelector((state) => state.authSlice.status);\r\n  const [theaterCity, setTheaterCity] = useState([]);\r\n  const [profile, setProfile] = useState(false);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const role = useSelector((state) => state.authSlice.user_role);\r\n  const loadtheaterCity = async () => {\r\n    \r\n    const result = await axios.get(\r\n      `${URL}/all/getalltheaterslocation`\r\n    );\r\n    setTheaterCity(result.data);\r\n  };\r\n\r\n  function selectAction(theater_id) {\r\n    // window.alert(\"select worked\" + theater_id);\r\n    dispatch(setTheater(theater_id));\r\n  }\r\n\r\n  const logOut = () => {\r\n    // alert(\"loggin out\");\r\n    dispatch(setSignout());\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadtheaterCity();\r\n    console.log(\"Theater City loaded successfully\");\r\n  }, []);\r\n\r\n  useEffect(() => {}, [signstatus]);\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      {profile && <UserProfile setOpenModel={setProfile} />}\r\n      <Nav>\r\n        <NavLink to=\"/\">\r\n          <img className=\"mylogo\" src={require(\"./logo.png\")} alt=\"logo\" />\r\n        </NavLink>\r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to=\"/home1\" activeStyle>\r\n            <Link\r\n              className=\"nav-link active\"\r\n              aria-current=\"page\"\r\n              to=\"/home\"\r\n            ></Link>\r\n            HOME\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/movies\" activeStyle>\r\n            MOVIES\r\n          </NavLink>\r\n          <NavLink to=\"/getalloffers\" activeStyle>\r\n            OFFERS\r\n          </NavLink>\r\n\r\n          {/* <div className=\"searchDiv\">\r\n            <input className=\"searchBar\" type=\"text\" placeholder=\"  Search\" />\r\n          </div> */}\r\n\r\n          <select\r\n            className=\"theaterBar\"\r\n            name=\"Theaters\"\r\n            id=\"Theaters\"\r\n            defaultValue=\"Select Theater\"\r\n            onChange={(e) => selectAction(e.target.value)}\r\n          >\r\n            <option value=\"none\" selected disabled hidden>\r\n              Choose A Theater\r\n            </option>\r\n            {theaterCity.map((item) => (\r\n              <option key={item.theaterId} value={item.theaterId}>\r\n                {item.theater_name},{item.taluka}\r\n              </option>\r\n            ))}\r\n            {/* {theaterCity.map((item) => {\r\n              return (\r\n                <option value={item.theaterId}onClick={() => console.alert(item.theaterId)} >\r\n                {item.theater_name},{item.taluka}\r\n              </option>\r\n              );\r\n            })} */}\r\n          </select>\r\n        </NavMenu>\r\n\r\n        {/*btn when not signed-in*/}\r\n        {!signstatus && (\r\n          <NavBtn>\r\n            <NavBtnLink to=\"/signin\">Sign In</NavBtnLink>\r\n          </NavBtn>\r\n        )}\r\n        {/*btn when signed-in*/}\r\n        {signstatus && (\r\n          <NavBtn>\r\n            <DropdownButton id=\"dropdown-basic-button\" title=\"PROFILE\">\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  setProfile(true);\r\n\r\n                  {\r\n                    role == \"ADMIN\"\r\n                      ? navigate(\"/adminhome\")\r\n                      : (role == \"USER\"\r\n                      ? navigate(\"/userprofile\")\r\n                      : navigate(\"/managerhome\"));\r\n                  }\r\n                }}\r\n              >\r\n                My Profile\r\n              </Dropdown.Item>\r\n              {role == \"ADMIN\" ? (\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    navigate(\"/adminhome\");\r\n                  }}\r\n                >\r\n                  ADMIN PANEL\r\n                </Dropdown.Item>\r\n              ) : role == \"USER\" ? null : (\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    navigate(\"/managerhome\");\r\n                  }}\r\n                >\r\n                  MANAGER PANEL\r\n                </Dropdown.Item>\r\n              )}\r\n              {role == \"USER\" ? (\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    navigate(\"/seemybokings\");\r\n                  }}\r\n                >\r\n                  See Bookings\r\n                </Dropdown.Item>\r\n              ) : null}\r\n              <Dropdown.Item onClick={logOut}>Logout</Dropdown.Item>\r\n            </DropdownButton>\r\n          </NavBtn>\r\n        )}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}